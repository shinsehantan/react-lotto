{"version":3,"sources":["components/Main/Main.js","constants/index.js","utils/index.js","components/Main/LottoItem.js","components/Main/LottoListSection.js","components/Main/PurchaseForm.js","components/Main/WinningNumberForm.js","utils/lottoUtils.js","components/Main/LotteryCountDown.js","components/Modal/LottoResultModal.js","components/Modal/EarningRateSection.js","components/Modal/ResultSection.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","useState","winningNumbers","setWinningNumbers","bonusNumber","setBonusNumber","className","PurchaseForm","setLottoCount","LottoListSection","isModalOpened","lottoCount","increaseWinningCounts","WinningNumberForm","openModal","LotteryCountDown","announcementDate","setAnnouncementDate","LOTTO_PRICE","LOTTO_VALUE","NUMBER_COUNT","MIN_NUMBER","MAX_NUMBER","RANK","FIRST","SECOND","THIRD","FOURTH","FIFTH","WINNING_PRIZE","MATCHED_COUNT","PRIZE_BY_RANK","MESSAGE","INVALID_MONEY_UNIT","LOTTO_NOT_EXIST","DUPLICATED_WINNING_NUMBERS","ANNOUNCE_DATE","getRandomNumber","min","max","Math","floor","random","LottoItem","isToggled","numbers","useRef","length","Set","size","number","add","Array","from","getRandomNumberArray","useEffect","matchedCount","current","parseInt","includes","join","toggle","setToggle","type","onChange","map","_","index","isActive","setIsActive","purchaseAmount","setPurchaseAmount","isValidPrice","onSubmit","event","preventDefault","alert","htmlFor","value","target","valueAsNumber","placeholder","required","disabled","winningNumbersInput","setWinningNumbersInput","bonusNumberInput","setBonusNumberInput","onWinningNumberChange","name","array","Object","values","id","aria-label","getAnnouncementDate","currentTime","Date","currentDayIndex","getDay","dayIndexGap","setDate","getDate","setHours","setMinutes","setSeconds","remainTime","setRemainTime","tick","intervalId","setInterval","clearInterval","time","gap","toLocaleString","LottoResultModal","role","aria-modal","onMouseDown","currentTarget","closeModal","onKeyDown","key","tabIndex","onClick","viewBox","d","ResultSection","winningCounts","EarningRateSection","paidMoney","resetAllState","earnedMoney","keys","reduce","sum","calculateEarningRate","App","setIsModalOpened","setWinningCounts","mainComponentKey","setMainComponentKey","rank","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea463fa1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { PurchaseForm, LottoListSection, WinningNumberForm, LotteryCountDown } from './index';\n\nexport default function Main(props) {\n  const [winningNumbers, setWinningNumbers] = useState([]);\n  const [bonusNumber, setBonusNumber] = useState(0);\n\n  return (\n    <main className=\"main-container d-flex flex-col\">\n      <h1 className=\"text-center m-0\">🎱 행운의 로또</h1>\n      <PurchaseForm setLottoCount={props.setLottoCount} />\n      <LottoListSection\n        isModalOpened={props.isModalOpened}\n        lottoCount={props.lottoCount}\n        winningNumbers={winningNumbers}\n        bonusNumber={bonusNumber}\n        increaseWinningCounts={props.increaseWinningCounts}\n      />\n      <WinningNumberForm\n        lottoCount={props.lottoCount}\n        setWinningNumbers={setWinningNumbers}\n        setBonusNumber={setBonusNumber}\n        openModal={props.openModal}\n      />\n      <LotteryCountDown\n        announcementDate={props.announcementDate}\n        setAnnouncementDate={props.setAnnouncementDate}\n      />\n    </main>\n  );\n}\n","export const CLASS_NAME = {\n  MODAL: {\n    CONTAINER: 'modal',\n    INNER: 'modal-inner',\n    CLOSE_BUTTON: 'modal-close-button',\n    RESTART_BUTTON: 'restart-button',\n  },\n};\n\nexport const ID = {\n  MAIN: {\n    PURCHASE_FORM: {\n      INPUT: 'money-input',\n    },\n    WINNING_NUMBER_FORM: {\n      WINNING_NUMBER_FIELDSET: 'winning-number-fieldset',\n      BONUS_NUMBER_FIELDSET: 'bonus-number-fieldset',\n    },\n  },\n};\n\nexport const LOTTO_PRICE = 1000;\n\nexport const LOTTO_VALUE = {\n  NUMBER_COUNT: 6,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n\n  RANK: {\n    FIRST: 1,\n    SECOND: 2,\n    THIRD: 3,\n    FOURTH: 4,\n    FIFTH: 5,\n  },\n\n  WINNING_PRIZE: {\n    FIRST: 2000000000,\n    SECOND: 30000000,\n    THIRD: 1500000,\n    FOURTH: 50000,\n    FIFTH: 5000,\n  },\n\n  MATCHED_COUNT: {\n    FIRST: 6,\n    THIRD: 5,\n    FOURTH: 4,\n    FIFTH: 3,\n  },\n};\n\nexport const PRIZE_BY_RANK = {\n  [LOTTO_VALUE.RANK.FIRST]: LOTTO_VALUE.WINNING_PRIZE.FIRST,\n  [LOTTO_VALUE.RANK.SECOND]: LOTTO_VALUE.WINNING_PRIZE.SECOND,\n  [LOTTO_VALUE.RANK.THIRD]: LOTTO_VALUE.WINNING_PRIZE.THIRD,\n  [LOTTO_VALUE.RANK.FOURTH]: LOTTO_VALUE.WINNING_PRIZE.FOURTH,\n  [LOTTO_VALUE.RANK.FIFTH]: LOTTO_VALUE.WINNING_PRIZE.FIFTH,\n};\n\nexport const MESSAGE = {\n  ALERT: {\n    INVALID_MONEY_UNIT: '1000원 단위로만 구매 가능합니다.',\n    LOTTO_NOT_EXIST: '구입한 로또가 없습니다.',\n    DUPLICATED_WINNING_NUMBERS: '당첨 번호는 중복될 수 없습니다.',\n  },\n};\n\nexport const ANNOUNCE_DATE = {\n  DAY_INDEX: 6, // 토요일\n  HOUR: 20,\n  MINUTE: 45,\n  SECOND: 0,\n};\n","export const isSameArray = (array1, array2) => {\n  return array1.length === new Set([...array1, ...array2]).size;\n};\n\nexport const isDuplicatedArray = (array) => {\n  return array.length !== new Set(array).size;\n};\n\nexport const getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const getRandomNumberArray = (min, max, length) => {\n  const numbers = new Set();\n\n  while (numbers.size < length) {\n    const number = getRandomNumber(min, max);\n\n    numbers.add(number);\n  }\n\n  return Array.from(numbers);\n};\n","import { LOTTO_VALUE } from '../../constants';\nimport { getRandomNumberArray } from '../../utils';\nimport { useEffect, useRef } from 'react';\n\nexport default function LottoItem(props) {\n  const isToggled = props.isToggled;\n  const isModalOpened = props.isModalOpened;\n  const numbers = useRef(\n    getRandomNumberArray(LOTTO_VALUE.MIN_NUMBER, LOTTO_VALUE.MAX_NUMBER, LOTTO_VALUE.NUMBER_COUNT)\n  );\n\n  useEffect(() => {\n    if (isModalOpened) {\n      increaseWinningCounts();\n    }\n  }, [isModalOpened]);\n\n  const getMatchedCount = () => {\n    return (\n      props.winningNumbers.length +\n      numbers.current.length -\n      new Set([...props.winningNumbers, ...numbers.current]).size\n    );\n  };\n\n  const increaseWinningCounts = () => {\n    // 일치하는 개수를 구하는 연산식\n    const matchedCount = getMatchedCount();\n    const bonusNumber = parseInt(props.bonusNumber);\n\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FIRST) {\n      props.increaseWinningCounts(LOTTO_VALUE.RANK.FIRST);\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.THIRD) {\n      if (numbers.current.includes(bonusNumber)) {\n        props.increaseWinningCounts(LOTTO_VALUE.RANK.SECOND);\n      } else {\n        props.increaseWinningCounts(LOTTO_VALUE.RANK.THIRD);\n      }\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FOURTH) {\n      props.increaseWinningCounts(LOTTO_VALUE.RANK.FOURTH);\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FIFTH) {\n      props.increaseWinningCounts(LOTTO_VALUE.RANK.FIFTH);\n    }\n  };\n\n  return (\n    <li className={`lotto-item ${isToggled ? 'toggle' : ''}`}>\n      <span className=\"lotto-icon\">🎟</span>\n      {isToggled && <span>{[...numbers.current].join(', ')}</span>}\n    </li>\n  );\n}\n","import { useState } from 'react';\nimport { LottoItem } from './index';\n\nexport default function LottoListSection(props) {\n  const lottoCount = props.lottoCount;\n  const [toggle, setToggle] = useState(false);\n\n  const onToggle = () => {\n    setToggle(!toggle);\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <div className=\"d-flex justify-space-between items-center\">\n        <div>\n          총 <span>{lottoCount}</span>개를 구매하였습니다.\n        </div>\n        <label className=\"toggle-button\">\n          <input type=\"checkbox\" onChange={onToggle} />\n          <span className=\"toggle-slider\"></span>\n        </label>\n      </div>\n      <ul className=\"lotto-list\">\n        {Array.from({ length: lottoCount }).map((_, index) => (\n          <LottoItem\n            key={index}\n            isToggled={toggle}\n            winningNumbers={props.winningNumbers}\n            bonusNumber={props.bonusNumber}\n            increaseWinningCounts={props.increaseWinningCounts}\n            isModalOpened={props.isModalOpened}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import { useState } from 'react';\nimport { LOTTO_PRICE, MESSAGE } from '../../constants';\n\nexport default function PurchaseForm(props) {\n  const [isActive, setIsActive] = useState(true);\n  const [purchaseAmount, setPurchaseAmount] = useState(0);\n\n  const onPurchaseAmountChange = (event) => {\n    setPurchaseAmount(event.target.valueAsNumber);\n  };\n\n  const onSubmitPurchaseForm = (event) => {\n    event.preventDefault();\n\n    if (!isValidPrice()) {\n      alert(MESSAGE.ALERT.INVALID_MONEY_UNIT);\n      return;\n    }\n\n    props.setLottoCount(purchaseAmount / LOTTO_PRICE);\n    setIsActive(false);\n  };\n\n  const isValidPrice = () => {\n    return purchaseAmount % LOTTO_PRICE === 0;\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <form className=\"w-100\" onSubmit={onSubmitPurchaseForm}>\n        <label htmlFor=\"money-input\" className=\"w-100\">\n          구입할 금액을 입력해주세요. (단위: 원)\n        </label>\n        <div className=\"d-flex justify-space-between items-center mt-1\">\n          <input\n            className=\"money-input flex-auto mr-3\"\n            type=\"number\"\n            value={purchaseAmount || ''}\n            onChange={onPurchaseAmountChange}\n            placeholder=\"구입 금액\"\n            min=\"1000\"\n            required\n            disabled={isActive ? false : true}\n          />\n          <button type=\"submit\" className=\"basic-button\" disabled={isActive ? false : true}>\n            확인\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","import { MESSAGE } from '../../constants';\nimport { isDuplicatedArray } from '../../utils';\nimport { useState } from 'react';\n\nexport default function WinningNumberForm(props) {\n  const [winningNumbersInput, setWinningNumbersInput] = useState({});\n  const [bonusNumberInput, setBonusNumberInput] = useState(0);\n\n  const onSubmitWinningNumberForm = (event) => {\n    event.preventDefault();\n\n    if (!props.lottoCount) {\n      alert(MESSAGE.ALERT.LOTTO_NOT_EXIST);\n      return;\n    }\n\n    if (isDuplicatedArray([...Object.values(winningNumbersInput), bonusNumberInput])) {\n      alert(MESSAGE.ALERT.DUPLICATED_WINNING_NUMBERS);\n      return;\n    }\n\n    props.openModal();\n    props.setWinningNumbers(Object.values(winningNumbersInput));\n    props.setBonusNumber(bonusNumberInput);\n  };\n\n  const onWinningNumberChange = (event) => {\n    setWinningNumbersInput({\n      ...winningNumbersInput,\n      [event.target.name]: event.target.valueAsNumber,\n    });\n  };\n\n  const onBonusNumberChange = (event) => {\n    setBonusNumberInput(event.target.value);\n  };\n\n  return (\n    <section className=\"w-100 mt-5\">\n      <form className=\"w-100 mt-1\" onSubmit={onSubmitWinningNumberForm}>\n        <label htmlFor=\"first-winning-number\" className=\"w-100\">\n          지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해 주세요.\n        </label>\n        <div className=\"d-flex mt-3\">\n          <fieldset id=\"winning-number-fieldset\" className=\"d-flex flex-col flex-auto\">\n            <legend className=\"text-center font-bold\">당첨번호</legend>\n            <div className=\"d-flex flex-row justify-space-between\">\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                id=\"first-winning-number\"\n                className=\"winning-number-input\"\n                name=\"first-winning-number\"\n                value={winningNumbersInput['first-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                aria-label=\"winning-number\"\n                className=\"winning-number-input\"\n                name=\"second-winning-number\"\n                value={winningNumbersInput['second-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                aria-label=\"winning-number\"\n                name=\"third-winning-number\"\n                value={winningNumbersInput['third-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                aria-label=\"winning-number\"\n                name=\"fourth-winning-number\"\n                value={winningNumbersInput['fourth-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                aria-label=\"winning-number\"\n                name=\"fifth-winning-number\"\n                value={winningNumbersInput['fifth-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"45\"\n                aria-label=\"winning-number\"\n                name=\"sixth-winning-number\"\n                value={winningNumbersInput['sixth-winning-number'] || ''}\n                onChange={onWinningNumberChange}\n                required\n              />\n            </div>\n          </fieldset>\n          <fieldset\n            id=\"bonus-number-fieldset\"\n            className=\"d-flex flex-col justify-center items-center\"\n          >\n            <legend className=\"text-center font-bold\">보너스</legend>\n            <input\n              type=\"number\"\n              className=\"winning-number-input\"\n              name=\"bonus-number\"\n              value={bonusNumberInput || ''}\n              onChange={onBonusNumberChange}\n              min=\"1\"\n              max=\"45\"\n              required\n            />\n          </fieldset>\n        </div>\n        <button className=\"w-100 basic-button mt-3\" type=\"submit\">\n          결과 확인하기\n        </button>\n      </form>\n    </section>\n  );\n}\n","import { ANNOUNCE_DATE } from '../constants';\n\nexport const getAnnouncementDate = () => {\n  const currentTime = new Date();\n  const currentDayIndex = currentTime.getDay();\n  const dayIndexGap = ANNOUNCE_DATE.DAY_INDEX - currentDayIndex;\n  const announcementDate = new Date();\n\n  announcementDate.setDate(announcementDate.getDate() + dayIndexGap);\n  announcementDate.setHours(ANNOUNCE_DATE.HOUR);\n  announcementDate.setMinutes(ANNOUNCE_DATE.MINUTE);\n  announcementDate.setSeconds(ANNOUNCE_DATE.SECOND);\n\n  if (announcementDate <= currentTime) {\n    announcementDate.setDate(announcementDate.getDate() + 7);\n  }\n\n  return announcementDate;\n};\n\nexport const toFormattedTimeString = (time) => {\n  return (\n    Math.floor(time / (1000 * 60 * 60 * 24)) +\n    '일 ' +\n    Math.floor((time / (1000 * 60 * 60)) % 24) +\n    '시간 ' +\n    (Math.floor(time / (1000 * 60)) % 60) +\n    '분 ' +\n    (Math.floor(time / 1000) % 60) +\n    '초'\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { toFormattedTimeString, getAnnouncementDate } from '../../utils/lottoUtils';\n\nexport default function LotteryCountDown(props) {\n  const [remainTime, setRemainTime] = useState(0);\n\n  useEffect(() => {\n    tick();\n    const intervalId = setInterval(tick, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const tick = () => {\n    const currentTime = new Date();\n    const gap = props.announcementDate - currentTime;\n\n    if (gap < 1000) {\n      props.setAnnouncementDate(getAnnouncementDate());\n    }\n\n    setRemainTime(gap);\n  };\n\n  return (\n    <div className=\"mt-5 text-center\">\n      <h3 className=\"m-1\">🎉 당첨 번호 발표 시간 🎉</h3>\n      <p className=\"m-1\">{props.announcementDate.toLocaleString('ko-KR')}</p>\n      <p className=\"mt-1\">남은 시간 : {toFormattedTimeString(remainTime)}</p>\n    </div>\n  );\n}\n","import { ResultSection, EarningRateSection } from './index';\n\nexport default function LottoResultModal(props) {\n  const handleDimmedClick = (event) => {\n    if (event.currentTarget === event.target) {\n      props.closeModal();\n    }\n  };\n\n  const handleEscapeKeyDown = (event) => {\n    if (event.key !== 'Esc' && event.key !== 'Escape') return;\n\n    props.closeModal();\n  };\n\n  return (\n    <div\n      className=\"modal d-flex justify-center items-center\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onMouseDown={handleDimmedClick}\n      onKeyDown={handleEscapeKeyDown}\n      tabIndex=\"0\"\n    >\n      <div className=\"modal-inner d-flex flex-col justify-center\">\n        <button type=\"button\" className=\"modal-close-button\" onClick={props.closeModal}>\n          <svg viewBox=\"0 0 40 40\">\n            <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30, 10 L 10, 30\" />\n          </svg>\n        </button>\n        <h1 className=\"text-center m-0\">💵 당첨 결과</h1>\n        <ResultSection winningCounts={props.winningCounts} />\n        <EarningRateSection paidMoney={props.paidMoney} winningCounts={props.winningCounts} />\n        <button\n          type=\"button\"\n          className=\"restart-button basic-button mt-5\"\n          onClick={props.resetAllState}\n        >\n          다시 시작하기\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { PRIZE_BY_RANK } from '../../constants';\n\nexport default function EarningRateSection(props) {\n  const getEarnedMoney = () => {\n    return Object.keys(props.winningCounts).reduce(\n      (sum, key) => sum + props.winningCounts[key] * PRIZE_BY_RANK[key],\n      0\n    );\n  };\n\n  const calculateEarningRate = () => {\n    const earnedMoney = getEarnedMoney();\n    const paidMoney = props.paidMoney;\n\n    return Math.floor(((earnedMoney - paidMoney) / paidMoney) * 100);\n  };\n\n  return (\n    <div className=\"mt-5 text-center\">\n      🎉🎉 당신의 총 수익률은 <span className=\"font-bold\">{calculateEarningRate()}</span>\n      %입니다. 🎉🎉\n    </div>\n  );\n}\n","import { LOTTO_VALUE } from '../../constants';\n\nexport default function ResultSection(props) {\n  return (\n    <table className=\"mt-3\">\n      <tbody>\n        <tr>\n          <th className=\"p-2\">일치 갯수</th>\n          <th className=\"p-2\">당첨금</th>\n          <th className=\"p-2\">당첨 갯수</th>\n        </tr>\n        <tr className=\"text-center\">\n          <td className=\"p-2\">3개</td>\n          <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FIFTH.toLocaleString()}</td>\n          <td className=\"p-2\">\n            <span>{props.winningCounts[LOTTO_VALUE.RANK.FIFTH]}</span>개\n          </td>\n        </tr>\n        <tr className=\"text-center\">\n          <td className=\"p-2\">4개</td>\n          <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FOURTH.toLocaleString()}</td>\n          <td className=\"p-2\">\n            <span>{props.winningCounts[LOTTO_VALUE.RANK.FOURTH]}</span>개\n          </td>\n        </tr>\n        <tr className=\"text-center\">\n          <td className=\"p-2\">5개</td>\n          <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.THIRD.toLocaleString()}</td>\n          <td className=\"p-2\">\n            <span>{props.winningCounts[LOTTO_VALUE.RANK.THIRD]}</span>개\n          </td>\n        </tr>\n        <tr className=\"text-center\">\n          <td className=\"p-2\">5개 + 보너스볼</td>\n          <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.SECOND.toLocaleString()}</td>\n          <td className=\"p-2\">\n            <span>{props.winningCounts[LOTTO_VALUE.RANK.SECOND]}</span>개\n          </td>\n        </tr>\n        <tr className=\"text-center\">\n          <td className=\"p-2\">6개</td>\n          <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FIRST.toLocaleString()}</td>\n          <td className=\"p-2\">\n            <span>{props.winningCounts[LOTTO_VALUE.RANK.FIRST]}</span>개\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import './index.css';\nimport './css/index.css';\nimport React, { useState } from 'react';\nimport { Main } from './components/Main/index';\nimport { LottoResultModal } from './components/Modal/index';\nimport { LOTTO_VALUE, LOTTO_PRICE } from './constants';\nimport { getAnnouncementDate } from './utils/lottoUtils';\n\nexport default function App() {\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [winningCounts, setWinningCounts] = useState({\n    [LOTTO_VALUE.RANK.FIRST]: 0,\n    [LOTTO_VALUE.RANK.SECOND]: 0,\n    [LOTTO_VALUE.RANK.THIRD]: 0,\n    [LOTTO_VALUE.RANK.FOURTH]: 0,\n    [LOTTO_VALUE.RANK.FIFTH]: 0,\n  });\n  const [lottoCount, setLottoCount] = useState(0);\n  const [mainComponentKey, setMainComponentKey] = useState(new Date());\n  const [announcementDate, setAnnouncementDate] = useState(getAnnouncementDate());\n\n  const resetState = () => {\n    setIsModalOpened(false);\n    setWinningCounts({\n      [LOTTO_VALUE.RANK.FIRST]: 0,\n      [LOTTO_VALUE.RANK.SECOND]: 0,\n      [LOTTO_VALUE.RANK.THIRD]: 0,\n      [LOTTO_VALUE.RANK.FOURTH]: 0,\n      [LOTTO_VALUE.RANK.FIFTH]: 0,\n    });\n    setLottoCount(0);\n    setMainComponentKey(new Date());\n    setAnnouncementDate(getAnnouncementDate());\n  };\n\n  const increaseWinningCounts = (rank) => {\n    setWinningCounts({ ...winningCounts, [rank]: winningCounts[rank] + 1 });\n  };\n\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n\n    setWinningCounts({\n      [LOTTO_VALUE.RANK.FIRST]: 0,\n      [LOTTO_VALUE.RANK.SECOND]: 0,\n      [LOTTO_VALUE.RANK.THIRD]: 0,\n      [LOTTO_VALUE.RANK.FOURTH]: 0,\n      [LOTTO_VALUE.RANK.FIFTH]: 0,\n    });\n  };\n\n  return (\n    <div className=\"app d-flex justify-center items-center\">\n      <Main\n        announcementDate={announcementDate}\n        setAnnouncementDate={setAnnouncementDate}\n        isModalOpened={isModalOpened}\n        openModal={openModal}\n        increaseWinningCounts={increaseWinningCounts}\n        setWinningCounts={setWinningCounts}\n        lottoCount={lottoCount}\n        setLottoCount={setLottoCount}\n        key={mainComponentKey}\n      />\n      {isModalOpened && (\n        <LottoResultModal\n          closeModal={closeModal}\n          winningCounts={winningCounts}\n          paidMoney={lottoCount * LOTTO_PRICE}\n          resetAllState={resetState}\n        />\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}